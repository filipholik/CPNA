/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Install.proto */

#ifndef PROTOBUF_C_Install_2eproto__INCLUDED
#define PROTOBUF_C_Install_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct InstallRequest InstallRequest;
typedef struct InstallReply InstallReply;


/* --- enums --- */


/* --- messages --- */

struct  InstallRequest
{
  ProtobufCMessage base;
  ProtobufCBinaryData elf;
};
#define INSTALL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&install_request__descriptor) \
    , {0,NULL} }


struct  InstallReply
{
  ProtobufCMessage base;
};
#define INSTALL_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&install_reply__descriptor) \
     }


/* InstallRequest methods */
void   install_request__init
                     (InstallRequest         *message);
size_t install_request__get_packed_size
                     (const InstallRequest   *message);
size_t install_request__pack
                     (const InstallRequest   *message,
                      uint8_t             *out);
size_t install_request__pack_to_buffer
                     (const InstallRequest   *message,
                      ProtobufCBuffer     *buffer);
InstallRequest *
       install_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   install_request__free_unpacked
                     (InstallRequest *message,
                      ProtobufCAllocator *allocator);
/* InstallReply methods */
void   install_reply__init
                     (InstallReply         *message);
size_t install_reply__get_packed_size
                     (const InstallReply   *message);
size_t install_reply__pack
                     (const InstallReply   *message,
                      uint8_t             *out);
size_t install_reply__pack_to_buffer
                     (const InstallReply   *message,
                      ProtobufCBuffer     *buffer);
InstallReply *
       install_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   install_reply__free_unpacked
                     (InstallReply *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*InstallRequest_Closure)
                 (const InstallRequest *message,
                  void *closure_data);
typedef void (*InstallReply_Closure)
                 (const InstallReply *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor install_request__descriptor;
extern const ProtobufCMessageDescriptor install_reply__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Install_2eproto__INCLUDED */
